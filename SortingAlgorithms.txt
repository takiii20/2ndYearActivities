import java.util.Arrays;
public class SortingAlgorithms
{
    public int[] bubblesort(int[] ar)
    {
      int[] arr = Arrays.copyOf(ar, ar.length); 
      int n = arr.length;  
      int temp = 0;  
      for(int i=0; i < n; i++)
      {  
         for(int j=1; j < (n-i); j++)
         {  
            if(arr[j-1] > arr[j])
            {  
              temp = arr[j-1];  
              arr[j-1] = arr[j];  
              arr[j] = temp;  
            }                       
          } 
       } 
      return arr;
    }
 
	public int[] selectionsort(int[] ar)
   {
     int[] arr = Arrays.copyOf(ar, ar.length); 
      int n = arr.length;
      for (int i = 0; i < n-1; i++)
      {
         int min = i;
         for (int j = i+1; j < n; j++)
         {
            if (arr[j] < arr[min])
            {
               min = j;
               int temp = arr[min];
               arr[min] = arr[i];
               arr[i] = temp;
            }
          }
        }
      return arr;
   } 
	public int[] insertionsort(int[] ar)
   {
      int[] arr = Arrays.copyOf(ar, ar.length); 
      int i, key, j;  
      for (i = 1; i < arr.length; i++) 
      {  
        key = arr[i];  
        j = i - 1;  
        while (j >= 0 && arr[j] > key) 
        {  
            arr[j + 1] = arr[j];  
            j = j - 1;  
        }  
        arr[j+1]=key;  
    }  
       return arr;
   }
 
	public int[] countingsort(int[] ar)
   {
    int[] arr = Arrays.copyOf(ar, ar.length); 
   int n = arr.length;

   int result[] = new int[n];

   int count[] = new int[9];
   for (int i=0; i<9; ++i)
      count[i] = 0;

    for (int i=0; i<n; ++i)
       ++count[arr[i]];

    for (int i=1; i<=8; ++i)
    count[i] += count[i-1];
 
    for (int i = 0; i<n; ++i)
    {
    result[count[arr[i]]-1] = arr[i];
    --count[arr[i]];
    }
    
    return result;
    }
        
  }

